# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'kirk-grpc-service-monitor'

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first.rules"
  # - "second.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.

  # - job_name: 'prometheus'
  #   scrape_interval: 5s
  #   static_configs:
  #     - targets: ['localhost:9090']

  - job_name: 'grpcserver_master'
    scrape_interval: 1s
    metrics_path: /
    static_configs:
      - targets: ['host.docker.internal:9091']
  - job_name: 'grpcserver_packing'
    scrape_interval: 1s
    metrics_path: /
    static_configs:
      - targets: ['host.docker.internal:8082']
  - job_name: 'grpcclient_areas'
    scrape_interval: 1s
    metrics_path: /
    static_configs:
      - targets: ['host.docker.internal:9092']
  - job_name: 'grpcclient_asset_equipments'
    scrape_interval: 1s
    metrics_path: /
    static_configs:
      - targets: ['host.docker.internal:9093']
  - job_name: 'grpcclient_contacts'
    scrape_interval: 1s
    metrics_path: /
    static_configs:
      - targets: ['host.docker.internal:9094']
  - job_name: 'grpcclient_users'
    scrape_interval: 1s
    metrics_path: /
    static_configs:
      - targets: ['host.docker.internal:9095']