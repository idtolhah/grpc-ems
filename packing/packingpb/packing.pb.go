// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: packingpb/packing.proto

package packingpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Packing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	FoId         string `protobuf:"bytes,2,opt,name=fo_id,json=foId,proto3" json:"fo_id"`
	LineId       int32  `protobuf:"varint,3,opt,name=line_id,json=lineId,proto3" json:"line_id"`
	MachineId    int32  `protobuf:"varint,4,opt,name=machine_id,json=machineId,proto3" json:"machine_id"`
	UnitId       int32  `protobuf:"varint,5,opt,name=unit_id,json=unitId,proto3" json:"unit_id"`
	DepartmentId int32  `protobuf:"varint,6,opt,name=department_id,json=departmentId,proto3" json:"department_id"`
	AreaId       int32  `protobuf:"varint,7,opt,name=area_id,json=areaId,proto3" json:"area_id"`
	CompletedAt  string `protobuf:"bytes,8,opt,name=completed_at,json=completedAt,proto3" json:"completed_at"`
	Status       int32  `protobuf:"varint,9,opt,name=status,proto3" json:"status"`
	CreatedAt    string `protobuf:"bytes,10,opt,name=createdAt,proto3" json:"createdAt"`
	UpdatedAt    string `protobuf:"bytes,11,opt,name=updatedAt,proto3" json:"updatedAt"`
}

func (x *Packing) Reset() {
	*x = Packing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packingpb_packing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Packing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packing) ProtoMessage() {}

func (x *Packing) ProtoReflect() protoreflect.Message {
	mi := &file_packingpb_packing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packing.ProtoReflect.Descriptor instead.
func (*Packing) Descriptor() ([]byte, []int) {
	return file_packingpb_packing_proto_rawDescGZIP(), []int{0}
}

func (x *Packing) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Packing) GetFoId() string {
	if x != nil {
		return x.FoId
	}
	return ""
}

func (x *Packing) GetLineId() int32 {
	if x != nil {
		return x.LineId
	}
	return 0
}

func (x *Packing) GetMachineId() int32 {
	if x != nil {
		return x.MachineId
	}
	return 0
}

func (x *Packing) GetUnitId() int32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *Packing) GetDepartmentId() int32 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *Packing) GetAreaId() int32 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *Packing) GetCompletedAt() string {
	if x != nil {
		return x.CompletedAt
	}
	return ""
}

func (x *Packing) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Packing) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Packing) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type EquipmentChecking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	IdEquipmentCheckingList int64  `protobuf:"varint,2,opt,name=id_equipment_checking_list,json=idEquipmentCheckingList,proto3" json:"id_equipment_checking_list"`
	PackingId               int64  `protobuf:"varint,3,opt,name=packing_id,json=packingId,proto3" json:"packing_id"`
	AssetEquipmentId        int32  `protobuf:"varint,4,opt,name=asset_equipment_id,json=assetEquipmentId,proto3" json:"asset_equipment_id"`
	FoId                    string `protobuf:"bytes,5,opt,name=fo_id,json=foId,proto3" json:"fo_id"`
	FoPhoto                 string `protobuf:"bytes,6,opt,name=fo_photo,json=foPhoto,proto3" json:"fo_photo"`
	FoCondition             int32  `protobuf:"varint,7,opt,name=fo_condition,json=foCondition,proto3" json:"fo_condition"`
	FoNote                  string `protobuf:"bytes,8,opt,name=fo_note,json=foNote,proto3" json:"fo_note"`
	AoId                    string `protobuf:"bytes,9,opt,name=ao_id,json=aoId,proto3" json:"ao_id"`
	AoConclusion            int32  `protobuf:"varint,10,opt,name=ao_conclusion,json=aoConclusion,proto3" json:"ao_conclusion"`
	AoNote                  string `protobuf:"bytes,11,opt,name=ao_note,json=aoNote,proto3" json:"ao_note"`
	AoCreatedAt             string `protobuf:"bytes,12,opt,name=ao_created_at,json=aoCreatedAt,proto3" json:"ao_created_at"`
	MoId                    string `protobuf:"bytes,13,opt,name=mo_id,json=moId,proto3" json:"mo_id"`
	MoRepairPhoto           string `protobuf:"bytes,14,opt,name=mo_repair_photo,json=moRepairPhoto,proto3" json:"mo_repair_photo"`
	MoNote                  string `protobuf:"bytes,15,opt,name=mo_note,json=moNote,proto3" json:"mo_note"`
	MoCreatedAt             string `protobuf:"bytes,16,opt,name=mo_created_at,json=moCreatedAt,proto3" json:"mo_created_at"`
	MrId                    string `protobuf:"bytes,17,opt,name=mr_id,json=mrId,proto3" json:"mr_id"`
	MrComment               string `protobuf:"bytes,18,opt,name=mr_comment,json=mrComment,proto3" json:"mr_comment"`
	MrCreatedAt             string `protobuf:"bytes,19,opt,name=mr_created_at,json=mrCreatedAt,proto3" json:"mr_created_at"`
}

func (x *EquipmentChecking) Reset() {
	*x = EquipmentChecking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packingpb_packing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentChecking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentChecking) ProtoMessage() {}

func (x *EquipmentChecking) ProtoReflect() protoreflect.Message {
	mi := &file_packingpb_packing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentChecking.ProtoReflect.Descriptor instead.
func (*EquipmentChecking) Descriptor() ([]byte, []int) {
	return file_packingpb_packing_proto_rawDescGZIP(), []int{1}
}

func (x *EquipmentChecking) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EquipmentChecking) GetIdEquipmentCheckingList() int64 {
	if x != nil {
		return x.IdEquipmentCheckingList
	}
	return 0
}

func (x *EquipmentChecking) GetPackingId() int64 {
	if x != nil {
		return x.PackingId
	}
	return 0
}

func (x *EquipmentChecking) GetAssetEquipmentId() int32 {
	if x != nil {
		return x.AssetEquipmentId
	}
	return 0
}

func (x *EquipmentChecking) GetFoId() string {
	if x != nil {
		return x.FoId
	}
	return ""
}

func (x *EquipmentChecking) GetFoPhoto() string {
	if x != nil {
		return x.FoPhoto
	}
	return ""
}

func (x *EquipmentChecking) GetFoCondition() int32 {
	if x != nil {
		return x.FoCondition
	}
	return 0
}

func (x *EquipmentChecking) GetFoNote() string {
	if x != nil {
		return x.FoNote
	}
	return ""
}

func (x *EquipmentChecking) GetAoId() string {
	if x != nil {
		return x.AoId
	}
	return ""
}

func (x *EquipmentChecking) GetAoConclusion() int32 {
	if x != nil {
		return x.AoConclusion
	}
	return 0
}

func (x *EquipmentChecking) GetAoNote() string {
	if x != nil {
		return x.AoNote
	}
	return ""
}

func (x *EquipmentChecking) GetAoCreatedAt() string {
	if x != nil {
		return x.AoCreatedAt
	}
	return ""
}

func (x *EquipmentChecking) GetMoId() string {
	if x != nil {
		return x.MoId
	}
	return ""
}

func (x *EquipmentChecking) GetMoRepairPhoto() string {
	if x != nil {
		return x.MoRepairPhoto
	}
	return ""
}

func (x *EquipmentChecking) GetMoNote() string {
	if x != nil {
		return x.MoNote
	}
	return ""
}

func (x *EquipmentChecking) GetMoCreatedAt() string {
	if x != nil {
		return x.MoCreatedAt
	}
	return ""
}

func (x *EquipmentChecking) GetMrId() string {
	if x != nil {
		return x.MrId
	}
	return ""
}

func (x *EquipmentChecking) GetMrComment() string {
	if x != nil {
		return x.MrComment
	}
	return ""
}

func (x *EquipmentChecking) GetMrCreatedAt() string {
	if x != nil {
		return x.MrCreatedAt
	}
	return ""
}

// All
type GetPackingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nophoto     int32  `protobuf:"varint,1,opt,name=nophoto,proto3" json:"nophoto"`
	Page        int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page"`
	Perpage     int32  `protobuf:"varint,3,opt,name=perpage,proto3" json:"perpage"`
	Status      int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status"`
	LineId      int32  `protobuf:"varint,5,opt,name=line_id,json=lineId,proto3" json:"line_id"`
	MachineId   int32  `protobuf:"varint,6,opt,name=machine_id,json=machineId,proto3" json:"machine_id"`
	Date        string `protobuf:"bytes,7,opt,name=date,proto3" json:"date"`
	FoCondition int32  `protobuf:"varint,8,opt,name=fo_condition,json=foCondition,proto3" json:"fo_condition"`
	AoCondition int32  `protobuf:"varint,9,opt,name=ao_condition,json=aoCondition,proto3" json:"ao_condition"`
}

func (x *GetPackingsRequest) Reset() {
	*x = GetPackingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packingpb_packing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackingsRequest) ProtoMessage() {}

func (x *GetPackingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_packingpb_packing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackingsRequest.ProtoReflect.Descriptor instead.
func (*GetPackingsRequest) Descriptor() ([]byte, []int) {
	return file_packingpb_packing_proto_rawDescGZIP(), []int{2}
}

func (x *GetPackingsRequest) GetNophoto() int32 {
	if x != nil {
		return x.Nophoto
	}
	return 0
}

func (x *GetPackingsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPackingsRequest) GetPerpage() int32 {
	if x != nil {
		return x.Perpage
	}
	return 0
}

func (x *GetPackingsRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetPackingsRequest) GetLineId() int32 {
	if x != nil {
		return x.LineId
	}
	return 0
}

func (x *GetPackingsRequest) GetMachineId() int32 {
	if x != nil {
		return x.MachineId
	}
	return 0
}

func (x *GetPackingsRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetPackingsRequest) GetFoCondition() int32 {
	if x != nil {
		return x.FoCondition
	}
	return 0
}

func (x *GetPackingsRequest) GetAoCondition() int32 {
	if x != nil {
		return x.AoCondition
	}
	return 0
}

type GetPackingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packings []*Packing `protobuf:"bytes,1,rep,name=packings,proto3" json:"packings"`
}

func (x *GetPackingsResponse) Reset() {
	*x = GetPackingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packingpb_packing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackingsResponse) ProtoMessage() {}

func (x *GetPackingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_packingpb_packing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackingsResponse.ProtoReflect.Descriptor instead.
func (*GetPackingsResponse) Descriptor() ([]byte, []int) {
	return file_packingpb_packing_proto_rawDescGZIP(), []int{3}
}

func (x *GetPackingsResponse) GetPackings() []*Packing {
	if x != nil {
		return x.Packings
	}
	return nil
}

type GetPackingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *GetPackingRequest) Reset() {
	*x = GetPackingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packingpb_packing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackingRequest) ProtoMessage() {}

func (x *GetPackingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_packingpb_packing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackingRequest.ProtoReflect.Descriptor instead.
func (*GetPackingRequest) Descriptor() ([]byte, []int) {
	return file_packingpb_packing_proto_rawDescGZIP(), []int{4}
}

func (x *GetPackingRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetPackingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packing            *Packing             `protobuf:"bytes,1,opt,name=packing,proto3" json:"packing"`
	EquipmentCheckings []*EquipmentChecking `protobuf:"bytes,2,rep,name=equipment_checkings,json=equipmentCheckings,proto3" json:"equipment_checkings"`
}

func (x *GetPackingResponse) Reset() {
	*x = GetPackingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packingpb_packing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackingResponse) ProtoMessage() {}

func (x *GetPackingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_packingpb_packing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackingResponse.ProtoReflect.Descriptor instead.
func (*GetPackingResponse) Descriptor() ([]byte, []int) {
	return file_packingpb_packing_proto_rawDescGZIP(), []int{5}
}

func (x *GetPackingResponse) GetPacking() *Packing {
	if x != nil {
		return x.Packing
	}
	return nil
}

func (x *GetPackingResponse) GetEquipmentCheckings() []*EquipmentChecking {
	if x != nil {
		return x.EquipmentCheckings
	}
	return nil
}

// FO
type CreatePackingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId              string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id"`
	LineId              int32  `protobuf:"varint,2,opt,name=line_id,json=lineId,proto3" json:"line_id"`
	MachineId           int32  `protobuf:"varint,3,opt,name=machine_id,json=machineId,proto3" json:"machine_id"`
	StatusSync          int32  `protobuf:"varint,4,opt,name=status_sync,json=statusSync,proto3" json:"status_sync"`
	ObservationDatetime string `protobuf:"bytes,5,opt,name=observation_datetime,json=observationDatetime,proto3" json:"observation_datetime"`
	UnitId              int32  `protobuf:"varint,6,opt,name=unit_id,json=unitId,proto3" json:"unit_id"`
	DepartmentId        int32  `protobuf:"varint,7,opt,name=department_id,json=departmentId,proto3" json:"department_id"`
	AreaId              int32  `protobuf:"varint,8,opt,name=area_id,json=areaId,proto3" json:"area_id"`
}

func (x *CreatePackingRequest) Reset() {
	*x = CreatePackingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packingpb_packing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePackingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePackingRequest) ProtoMessage() {}

func (x *CreatePackingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_packingpb_packing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePackingRequest.ProtoReflect.Descriptor instead.
func (*CreatePackingRequest) Descriptor() ([]byte, []int) {
	return file_packingpb_packing_proto_rawDescGZIP(), []int{6}
}

func (x *CreatePackingRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreatePackingRequest) GetLineId() int32 {
	if x != nil {
		return x.LineId
	}
	return 0
}

func (x *CreatePackingRequest) GetMachineId() int32 {
	if x != nil {
		return x.MachineId
	}
	return 0
}

func (x *CreatePackingRequest) GetStatusSync() int32 {
	if x != nil {
		return x.StatusSync
	}
	return 0
}

func (x *CreatePackingRequest) GetObservationDatetime() string {
	if x != nil {
		return x.ObservationDatetime
	}
	return ""
}

func (x *CreatePackingRequest) GetUnitId() int32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *CreatePackingRequest) GetDepartmentId() int32 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *CreatePackingRequest) GetAreaId() int32 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

type CreatePackingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Data *CreatePackingRequest `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *CreatePackingResponse) Reset() {
	*x = CreatePackingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packingpb_packing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePackingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePackingResponse) ProtoMessage() {}

func (x *CreatePackingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_packingpb_packing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePackingResponse.ProtoReflect.Descriptor instead.
func (*CreatePackingResponse) Descriptor() ([]byte, []int) {
	return file_packingpb_packing_proto_rawDescGZIP(), []int{7}
}

func (x *CreatePackingResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreatePackingResponse) GetData() *CreatePackingRequest {
	if x != nil {
		return x.Data
	}
	return nil
}

// FO
type CreateEquipmentCheckingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdEquipmentCheckingList int32  `protobuf:"varint,1,opt,name=id_equipment_checking_list,json=idEquipmentCheckingList,proto3" json:"id_equipment_checking_list"`
	IdPackagingCheck        int32  `protobuf:"varint,2,opt,name=id_packaging_check,json=idPackagingCheck,proto3" json:"id_packaging_check"`
	IdAssetEquipment        int32  `protobuf:"varint,3,opt,name=id_asset_equipment,json=idAssetEquipment,proto3" json:"id_asset_equipment"`
	Photo                   string `protobuf:"bytes,4,opt,name=photo,proto3" json:"photo"`
	Condition               int32  `protobuf:"varint,5,opt,name=condition,proto3" json:"condition"`
	Note                    string `protobuf:"bytes,6,opt,name=note,proto3" json:"note"`
	Status                  int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status"`
	ObservationDatetime     string `protobuf:"bytes,8,opt,name=observation_datetime,json=observationDatetime,proto3" json:"observation_datetime"`
}

func (x *CreateEquipmentCheckingRequest) Reset() {
	*x = CreateEquipmentCheckingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packingpb_packing_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEquipmentCheckingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEquipmentCheckingRequest) ProtoMessage() {}

func (x *CreateEquipmentCheckingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_packingpb_packing_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEquipmentCheckingRequest.ProtoReflect.Descriptor instead.
func (*CreateEquipmentCheckingRequest) Descriptor() ([]byte, []int) {
	return file_packingpb_packing_proto_rawDescGZIP(), []int{8}
}

func (x *CreateEquipmentCheckingRequest) GetIdEquipmentCheckingList() int32 {
	if x != nil {
		return x.IdEquipmentCheckingList
	}
	return 0
}

func (x *CreateEquipmentCheckingRequest) GetIdPackagingCheck() int32 {
	if x != nil {
		return x.IdPackagingCheck
	}
	return 0
}

func (x *CreateEquipmentCheckingRequest) GetIdAssetEquipment() int32 {
	if x != nil {
		return x.IdAssetEquipment
	}
	return 0
}

func (x *CreateEquipmentCheckingRequest) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *CreateEquipmentCheckingRequest) GetCondition() int32 {
	if x != nil {
		return x.Condition
	}
	return 0
}

func (x *CreateEquipmentCheckingRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *CreateEquipmentCheckingRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateEquipmentCheckingRequest) GetObservationDatetime() string {
	if x != nil {
		return x.ObservationDatetime
	}
	return ""
}

type CreateEquipmentCheckingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32                           `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Data *CreateEquipmentCheckingRequest `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *CreateEquipmentCheckingResponse) Reset() {
	*x = CreateEquipmentCheckingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packingpb_packing_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEquipmentCheckingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEquipmentCheckingResponse) ProtoMessage() {}

func (x *CreateEquipmentCheckingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_packingpb_packing_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEquipmentCheckingResponse.ProtoReflect.Descriptor instead.
func (*CreateEquipmentCheckingResponse) Descriptor() ([]byte, []int) {
	return file_packingpb_packing_proto_rawDescGZIP(), []int{9}
}

func (x *CreateEquipmentCheckingResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateEquipmentCheckingResponse) GetData() *CreateEquipmentCheckingRequest {
	if x != nil {
		return x.Data
	}
	return nil
}

// AO
type UpdateEquipmentCheckingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AoConclusion          int32  `protobuf:"varint,1,opt,name=ao_conclusion,json=aoConclusion,proto3" json:"ao_conclusion"`
	AoNote                string `protobuf:"bytes,2,opt,name=ao_note,json=aoNote,proto3" json:"ao_note"`
	AoObservationDatetime string `protobuf:"bytes,3,opt,name=ao_observation_datetime,json=aoObservationDatetime,proto3" json:"ao_observation_datetime"`
	AoId                  string `protobuf:"bytes,4,opt,name=ao_id,json=aoId,proto3" json:"ao_id"`
}

func (x *UpdateEquipmentCheckingRequest) Reset() {
	*x = UpdateEquipmentCheckingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packingpb_packing_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEquipmentCheckingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEquipmentCheckingRequest) ProtoMessage() {}

func (x *UpdateEquipmentCheckingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_packingpb_packing_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEquipmentCheckingRequest.ProtoReflect.Descriptor instead.
func (*UpdateEquipmentCheckingRequest) Descriptor() ([]byte, []int) {
	return file_packingpb_packing_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateEquipmentCheckingRequest) GetAoConclusion() int32 {
	if x != nil {
		return x.AoConclusion
	}
	return 0
}

func (x *UpdateEquipmentCheckingRequest) GetAoNote() string {
	if x != nil {
		return x.AoNote
	}
	return ""
}

func (x *UpdateEquipmentCheckingRequest) GetAoObservationDatetime() string {
	if x != nil {
		return x.AoObservationDatetime
	}
	return ""
}

func (x *UpdateEquipmentCheckingRequest) GetAoId() string {
	if x != nil {
		return x.AoId
	}
	return ""
}

type UpdateEquipmentCheckingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *UpdateEquipmentCheckingResponse) Reset() {
	*x = UpdateEquipmentCheckingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packingpb_packing_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEquipmentCheckingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEquipmentCheckingResponse) ProtoMessage() {}

func (x *UpdateEquipmentCheckingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_packingpb_packing_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEquipmentCheckingResponse.ProtoReflect.Descriptor instead.
func (*UpdateEquipmentCheckingResponse) Descriptor() ([]byte, []int) {
	return file_packingpb_packing_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateEquipmentCheckingResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// QFS
type CreateCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EquipmentCheckingId int32  `protobuf:"varint,1,opt,name=equipment_checking_id,json=equipmentCheckingId,proto3" json:"equipment_checking_id"`
	MrComment           string `protobuf:"bytes,2,opt,name=mr_comment,json=mrComment,proto3" json:"mr_comment"`
	MrId                int32  `protobuf:"varint,3,opt,name=mr_id,json=mrId,proto3" json:"mr_id"`
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packingpb_packing_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_packingpb_packing_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_packingpb_packing_proto_rawDescGZIP(), []int{12}
}

func (x *CreateCommentRequest) GetEquipmentCheckingId() int32 {
	if x != nil {
		return x.EquipmentCheckingId
	}
	return 0
}

func (x *CreateCommentRequest) GetMrComment() string {
	if x != nil {
		return x.MrComment
	}
	return ""
}

func (x *CreateCommentRequest) GetMrId() int32 {
	if x != nil {
		return x.MrId
	}
	return 0
}

type CreateCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *CreateCommentResponse) Reset() {
	*x = CreateCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packingpb_packing_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentResponse) ProtoMessage() {}

func (x *CreateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_packingpb_packing_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentResponse.ProtoReflect.Descriptor instead.
func (*CreateCommentResponse) Descriptor() ([]byte, []int) {
	return file_packingpb_packing_proto_rawDescGZIP(), []int{13}
}

func (x *CreateCommentResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_packingpb_packing_proto protoreflect.FileDescriptor

var file_packingpb_packing_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2f, 0x70, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x70, 0x62, 0x22, 0xb4, 0x02, 0x0a, 0x07, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x13, 0x0a, 0x05, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x6f, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x72,
	0x65, 0x61, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xe2, 0x04, 0x0a, 0x11,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x69, 0x64, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x69, 0x64, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x2c, 0x0a,
	0x12, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x66,
	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6f, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x66, 0x6f, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x6f, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x66,
	0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x66, 0x6f, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17,
	0x0a, 0x07, 0x66, 0x6f, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x6f, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x6f, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x6f, 0x43, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x6f, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x6f,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x13,
	0x0a, 0x05, 0x6d, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x6f, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x6f, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72,
	0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x6f,
	0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6d,
	0x6f, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f,
	0x4e, 0x6f, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x6f, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x6d, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d,
	0x6d, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x86, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x6f, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x6f, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6f, 0x5f, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x6f,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x45, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x50,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73,
	0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07,
	0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x4d, 0x0a, 0x13, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x70, 0x62, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x12, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x92, 0x02, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x69,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x73, 0x79,
	0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x53, 0x79, 0x6e, 0x63, 0x12, 0x31, 0x0a, 0x14, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x22, 0x5c,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x70,
	0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcc, 0x02, 0x0a,
	0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3b, 0x0a, 0x1a, 0x69, 0x64, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x17, 0x69, 0x64, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12,
	0x69, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x69, 0x64, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x64,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x69, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x6f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x70, 0x0a, 0x1f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xab, 0x01,
	0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x6f, 0x43, 0x6f, 0x6e, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x6f, 0x5f, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x36,
	0x0a, 0x17, 0x61, 0x6f, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x61, 0x6f, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x6f, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x6f, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x1f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7e,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x72,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x6d, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6d, 0x72, 0x49, 0x64, 0x22, 0x27,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x32, 0xc1, 0x04, 0x0a, 0x0e, 0x50, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x72, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x2e, 0x70,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e,
	0x2f, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_packingpb_packing_proto_rawDescOnce sync.Once
	file_packingpb_packing_proto_rawDescData = file_packingpb_packing_proto_rawDesc
)

func file_packingpb_packing_proto_rawDescGZIP() []byte {
	file_packingpb_packing_proto_rawDescOnce.Do(func() {
		file_packingpb_packing_proto_rawDescData = protoimpl.X.CompressGZIP(file_packingpb_packing_proto_rawDescData)
	})
	return file_packingpb_packing_proto_rawDescData
}

var file_packingpb_packing_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_packingpb_packing_proto_goTypes = []interface{}{
	(*Packing)(nil),                         // 0: packingpb.Packing
	(*EquipmentChecking)(nil),               // 1: packingpb.EquipmentChecking
	(*GetPackingsRequest)(nil),              // 2: packingpb.GetPackingsRequest
	(*GetPackingsResponse)(nil),             // 3: packingpb.GetPackingsResponse
	(*GetPackingRequest)(nil),               // 4: packingpb.GetPackingRequest
	(*GetPackingResponse)(nil),              // 5: packingpb.GetPackingResponse
	(*CreatePackingRequest)(nil),            // 6: packingpb.CreatePackingRequest
	(*CreatePackingResponse)(nil),           // 7: packingpb.CreatePackingResponse
	(*CreateEquipmentCheckingRequest)(nil),  // 8: packingpb.CreateEquipmentCheckingRequest
	(*CreateEquipmentCheckingResponse)(nil), // 9: packingpb.CreateEquipmentCheckingResponse
	(*UpdateEquipmentCheckingRequest)(nil),  // 10: packingpb.UpdateEquipmentCheckingRequest
	(*UpdateEquipmentCheckingResponse)(nil), // 11: packingpb.UpdateEquipmentCheckingResponse
	(*CreateCommentRequest)(nil),            // 12: packingpb.CreateCommentRequest
	(*CreateCommentResponse)(nil),           // 13: packingpb.CreateCommentResponse
}
var file_packingpb_packing_proto_depIdxs = []int32{
	0,  // 0: packingpb.GetPackingsResponse.packings:type_name -> packingpb.Packing
	0,  // 1: packingpb.GetPackingResponse.packing:type_name -> packingpb.Packing
	1,  // 2: packingpb.GetPackingResponse.equipment_checkings:type_name -> packingpb.EquipmentChecking
	6,  // 3: packingpb.CreatePackingResponse.data:type_name -> packingpb.CreatePackingRequest
	8,  // 4: packingpb.CreateEquipmentCheckingResponse.data:type_name -> packingpb.CreateEquipmentCheckingRequest
	2,  // 5: packingpb.PackingService.GetPackings:input_type -> packingpb.GetPackingsRequest
	4,  // 6: packingpb.PackingService.GetPacking:input_type -> packingpb.GetPackingRequest
	6,  // 7: packingpb.PackingService.CreatePacking:input_type -> packingpb.CreatePackingRequest
	8,  // 8: packingpb.PackingService.CreateEquipmentChecking:input_type -> packingpb.CreateEquipmentCheckingRequest
	10, // 9: packingpb.PackingService.UpdateEquipmentChecking:input_type -> packingpb.UpdateEquipmentCheckingRequest
	12, // 10: packingpb.PackingService.CreateComment:input_type -> packingpb.CreateCommentRequest
	3,  // 11: packingpb.PackingService.GetPackings:output_type -> packingpb.GetPackingsResponse
	5,  // 12: packingpb.PackingService.GetPacking:output_type -> packingpb.GetPackingResponse
	7,  // 13: packingpb.PackingService.CreatePacking:output_type -> packingpb.CreatePackingResponse
	9,  // 14: packingpb.PackingService.CreateEquipmentChecking:output_type -> packingpb.CreateEquipmentCheckingResponse
	11, // 15: packingpb.PackingService.UpdateEquipmentChecking:output_type -> packingpb.UpdateEquipmentCheckingResponse
	13, // 16: packingpb.PackingService.CreateComment:output_type -> packingpb.CreateCommentResponse
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_packingpb_packing_proto_init() }
func file_packingpb_packing_proto_init() {
	if File_packingpb_packing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_packingpb_packing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Packing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packingpb_packing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentChecking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packingpb_packing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPackingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packingpb_packing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPackingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packingpb_packing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPackingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packingpb_packing_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPackingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packingpb_packing_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePackingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packingpb_packing_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePackingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packingpb_packing_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEquipmentCheckingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packingpb_packing_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEquipmentCheckingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packingpb_packing_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEquipmentCheckingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packingpb_packing_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEquipmentCheckingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packingpb_packing_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packingpb_packing_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_packingpb_packing_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_packingpb_packing_proto_goTypes,
		DependencyIndexes: file_packingpb_packing_proto_depIdxs,
		MessageInfos:      file_packingpb_packing_proto_msgTypes,
	}.Build()
	File_packingpb_packing_proto = out.File
	file_packingpb_packing_proto_rawDesc = nil
	file_packingpb_packing_proto_goTypes = nil
	file_packingpb_packing_proto_depIdxs = nil
}
