// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: pb/packingquerypb/packingquery.proto

package packingquerypb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Unit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Unit) Reset() {
	*x = Unit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unit) ProtoMessage() {}

func (x *Unit) ProtoReflect() protoreflect.Message {
	mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unit.ProtoReflect.Descriptor instead.
func (*Unit) Descriptor() ([]byte, []int) {
	return file_pb_packingquerypb_packingquery_proto_rawDescGZIP(), []int{0}
}

func (x *Unit) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Unit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Department struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Department) Reset() {
	*x = Department{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Department) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Department) ProtoMessage() {}

func (x *Department) ProtoReflect() protoreflect.Message {
	mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Department.ProtoReflect.Descriptor instead.
func (*Department) Descriptor() ([]byte, []int) {
	return file_pb_packingquerypb_packingquery_proto_rawDescGZIP(), []int{1}
}

func (x *Department) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Department) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Area struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Area) Reset() {
	*x = Area{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Area) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Area) ProtoMessage() {}

func (x *Area) ProtoReflect() protoreflect.Message {
	mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Area.ProtoReflect.Descriptor instead.
func (*Area) Descriptor() ([]byte, []int) {
	return file_pb_packingquerypb_packingquery_proto_rawDescGZIP(), []int{2}
}

func (x *Area) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Area) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Line struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Line) Reset() {
	*x = Line{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Line) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Line) ProtoMessage() {}

func (x *Line) ProtoReflect() protoreflect.Message {
	mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Line.ProtoReflect.Descriptor instead.
func (*Line) Descriptor() ([]byte, []int) {
	return file_pb_packingquerypb_packingquery_proto_rawDescGZIP(), []int{3}
}

func (x *Line) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Line) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Machine) Reset() {
	*x = Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine.ProtoReflect.Descriptor instead.
func (*Machine) Descriptor() ([]byte, []int) {
	return file_pb_packingquerypb_packingquery_proto_rawDescGZIP(), []int{4}
}

func (x *Machine) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Machine) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GroupId string `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_pb_packingquerypb_packingquery_proto_rawDescGZIP(), []int{5}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type AssetEquipment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Item           string   `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	ItemCheck      string   `protobuf:"bytes,3,opt,name=item_check,json=itemCheck,proto3" json:"item_check,omitempty"`
	CheckingMethod string   `protobuf:"bytes,4,opt,name=checking_method,json=checkingMethod,proto3" json:"checking_method,omitempty"`
	Tools          string   `protobuf:"bytes,5,opt,name=tools,proto3" json:"tools,omitempty"`
	StandardArea   string   `protobuf:"bytes,6,opt,name=standard_area,json=standardArea,proto3" json:"standard_area,omitempty"`
	Photo          string   `protobuf:"bytes,7,opt,name=photo,proto3" json:"photo,omitempty"`
	LineId         int32    `protobuf:"varint,8,opt,name=line_id,json=lineId,proto3" json:"line_id,omitempty"`
	MachineId      int32    `protobuf:"varint,9,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	Line           *Line    `protobuf:"bytes,10,opt,name=line,proto3" json:"line,omitempty"`
	Machine        *Machine `protobuf:"bytes,11,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *AssetEquipment) Reset() {
	*x = AssetEquipment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetEquipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetEquipment) ProtoMessage() {}

func (x *AssetEquipment) ProtoReflect() protoreflect.Message {
	mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetEquipment.ProtoReflect.Descriptor instead.
func (*AssetEquipment) Descriptor() ([]byte, []int) {
	return file_pb_packingquerypb_packingquery_proto_rawDescGZIP(), []int{6}
}

func (x *AssetEquipment) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssetEquipment) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

func (x *AssetEquipment) GetItemCheck() string {
	if x != nil {
		return x.ItemCheck
	}
	return ""
}

func (x *AssetEquipment) GetCheckingMethod() string {
	if x != nil {
		return x.CheckingMethod
	}
	return ""
}

func (x *AssetEquipment) GetTools() string {
	if x != nil {
		return x.Tools
	}
	return ""
}

func (x *AssetEquipment) GetStandardArea() string {
	if x != nil {
		return x.StandardArea
	}
	return ""
}

func (x *AssetEquipment) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *AssetEquipment) GetLineId() int32 {
	if x != nil {
		return x.LineId
	}
	return 0
}

func (x *AssetEquipment) GetMachineId() int32 {
	if x != nil {
		return x.MachineId
	}
	return 0
}

func (x *AssetEquipment) GetLine() *Line {
	if x != nil {
		return x.Line
	}
	return nil
}

func (x *AssetEquipment) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type Packing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FoId               string               `protobuf:"bytes,2,opt,name=fo_id,json=foId,proto3" json:"fo_id,omitempty"`
	LineId             int32                `protobuf:"varint,3,opt,name=line_id,json=lineId,proto3" json:"line_id,omitempty"`
	MachineId          int32                `protobuf:"varint,4,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	UnitId             int32                `protobuf:"varint,5,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	DepartmentId       int32                `protobuf:"varint,6,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	AreaId             int32                `protobuf:"varint,7,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	CompletedAt        string               `protobuf:"bytes,8,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	Status             int32                `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt          string               `protobuf:"bytes,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          string               `protobuf:"bytes,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	EquipmentCheckings []*EquipmentChecking `protobuf:"bytes,12,rep,name=equipment_checkings,json=equipmentCheckings,proto3" json:"equipment_checkings,omitempty"`
	Unit               *Unit                `protobuf:"bytes,13,opt,name=unit,proto3" json:"unit,omitempty"`
	Department         *Department          `protobuf:"bytes,14,opt,name=department,proto3" json:"department,omitempty"`
	Area               *Area                `protobuf:"bytes,15,opt,name=area,proto3" json:"area,omitempty"`
	Line               *Line                `protobuf:"bytes,16,opt,name=line,proto3" json:"line,omitempty"`
	Machine            *Machine             `protobuf:"bytes,17,opt,name=machine,proto3" json:"machine,omitempty"`
	Fo                 *User                `protobuf:"bytes,18,opt,name=fo,proto3" json:"fo,omitempty"`
}

func (x *Packing) Reset() {
	*x = Packing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Packing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packing) ProtoMessage() {}

func (x *Packing) ProtoReflect() protoreflect.Message {
	mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packing.ProtoReflect.Descriptor instead.
func (*Packing) Descriptor() ([]byte, []int) {
	return file_pb_packingquerypb_packingquery_proto_rawDescGZIP(), []int{7}
}

func (x *Packing) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Packing) GetFoId() string {
	if x != nil {
		return x.FoId
	}
	return ""
}

func (x *Packing) GetLineId() int32 {
	if x != nil {
		return x.LineId
	}
	return 0
}

func (x *Packing) GetMachineId() int32 {
	if x != nil {
		return x.MachineId
	}
	return 0
}

func (x *Packing) GetUnitId() int32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *Packing) GetDepartmentId() int32 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *Packing) GetAreaId() int32 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *Packing) GetCompletedAt() string {
	if x != nil {
		return x.CompletedAt
	}
	return ""
}

func (x *Packing) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Packing) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Packing) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Packing) GetEquipmentCheckings() []*EquipmentChecking {
	if x != nil {
		return x.EquipmentCheckings
	}
	return nil
}

func (x *Packing) GetUnit() *Unit {
	if x != nil {
		return x.Unit
	}
	return nil
}

func (x *Packing) GetDepartment() *Department {
	if x != nil {
		return x.Department
	}
	return nil
}

func (x *Packing) GetArea() *Area {
	if x != nil {
		return x.Area
	}
	return nil
}

func (x *Packing) GetLine() *Line {
	if x != nil {
		return x.Line
	}
	return nil
}

func (x *Packing) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *Packing) GetFo() *User {
	if x != nil {
		return x.Fo
	}
	return nil
}

type EquipmentChecking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IdEquipmentCheckingList int64           `protobuf:"varint,2,opt,name=id_equipment_checking_list,json=idEquipmentCheckingList,proto3" json:"id_equipment_checking_list,omitempty"`
	PackingId               int64           `protobuf:"varint,3,opt,name=packing_id,json=packingId,proto3" json:"packing_id,omitempty"`
	AssetEquipmentId        int32           `protobuf:"varint,4,opt,name=asset_equipment_id,json=assetEquipmentId,proto3" json:"asset_equipment_id,omitempty"`
	FoId                    string          `protobuf:"bytes,5,opt,name=fo_id,json=foId,proto3" json:"fo_id,omitempty"`
	FoPhoto                 string          `protobuf:"bytes,6,opt,name=fo_photo,json=foPhoto,proto3" json:"fo_photo,omitempty"`
	FoCondition             string          `protobuf:"bytes,7,opt,name=fo_condition,json=foCondition,proto3" json:"fo_condition,omitempty"`
	FoNote                  string          `protobuf:"bytes,8,opt,name=fo_note,json=foNote,proto3" json:"fo_note,omitempty"`
	AoId                    string          `protobuf:"bytes,9,opt,name=ao_id,json=aoId,proto3" json:"ao_id,omitempty"`
	AoConclusion            string          `protobuf:"bytes,10,opt,name=ao_conclusion,json=aoConclusion,proto3" json:"ao_conclusion,omitempty"`
	AoNote                  string          `protobuf:"bytes,11,opt,name=ao_note,json=aoNote,proto3" json:"ao_note,omitempty"`
	AoCreatedAt             string          `protobuf:"bytes,12,opt,name=ao_created_at,json=aoCreatedAt,proto3" json:"ao_created_at,omitempty"`
	MoId                    string          `protobuf:"bytes,13,opt,name=mo_id,json=moId,proto3" json:"mo_id,omitempty"`
	MoRepairPhoto           string          `protobuf:"bytes,14,opt,name=mo_repair_photo,json=moRepairPhoto,proto3" json:"mo_repair_photo,omitempty"`
	MoNote                  string          `protobuf:"bytes,15,opt,name=mo_note,json=moNote,proto3" json:"mo_note,omitempty"`
	MoCreatedAt             string          `protobuf:"bytes,16,opt,name=mo_created_at,json=moCreatedAt,proto3" json:"mo_created_at,omitempty"`
	MrId                    string          `protobuf:"bytes,17,opt,name=mr_id,json=mrId,proto3" json:"mr_id,omitempty"`
	MrComment               string          `protobuf:"bytes,18,opt,name=mr_comment,json=mrComment,proto3" json:"mr_comment,omitempty"`
	MrCreatedAt             string          `protobuf:"bytes,19,opt,name=mr_created_at,json=mrCreatedAt,proto3" json:"mr_created_at,omitempty"`
	CreatedAt               string          `protobuf:"bytes,20,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt               string          `protobuf:"bytes,21,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Fo                      *User           `protobuf:"bytes,22,opt,name=fo,proto3" json:"fo,omitempty"`
	AssetEquipment          *AssetEquipment `protobuf:"bytes,23,opt,name=asset_equipment,json=assetEquipment,proto3" json:"asset_equipment,omitempty"`
}

func (x *EquipmentChecking) Reset() {
	*x = EquipmentChecking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentChecking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentChecking) ProtoMessage() {}

func (x *EquipmentChecking) ProtoReflect() protoreflect.Message {
	mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentChecking.ProtoReflect.Descriptor instead.
func (*EquipmentChecking) Descriptor() ([]byte, []int) {
	return file_pb_packingquerypb_packingquery_proto_rawDescGZIP(), []int{8}
}

func (x *EquipmentChecking) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EquipmentChecking) GetIdEquipmentCheckingList() int64 {
	if x != nil {
		return x.IdEquipmentCheckingList
	}
	return 0
}

func (x *EquipmentChecking) GetPackingId() int64 {
	if x != nil {
		return x.PackingId
	}
	return 0
}

func (x *EquipmentChecking) GetAssetEquipmentId() int32 {
	if x != nil {
		return x.AssetEquipmentId
	}
	return 0
}

func (x *EquipmentChecking) GetFoId() string {
	if x != nil {
		return x.FoId
	}
	return ""
}

func (x *EquipmentChecking) GetFoPhoto() string {
	if x != nil {
		return x.FoPhoto
	}
	return ""
}

func (x *EquipmentChecking) GetFoCondition() string {
	if x != nil {
		return x.FoCondition
	}
	return ""
}

func (x *EquipmentChecking) GetFoNote() string {
	if x != nil {
		return x.FoNote
	}
	return ""
}

func (x *EquipmentChecking) GetAoId() string {
	if x != nil {
		return x.AoId
	}
	return ""
}

func (x *EquipmentChecking) GetAoConclusion() string {
	if x != nil {
		return x.AoConclusion
	}
	return ""
}

func (x *EquipmentChecking) GetAoNote() string {
	if x != nil {
		return x.AoNote
	}
	return ""
}

func (x *EquipmentChecking) GetAoCreatedAt() string {
	if x != nil {
		return x.AoCreatedAt
	}
	return ""
}

func (x *EquipmentChecking) GetMoId() string {
	if x != nil {
		return x.MoId
	}
	return ""
}

func (x *EquipmentChecking) GetMoRepairPhoto() string {
	if x != nil {
		return x.MoRepairPhoto
	}
	return ""
}

func (x *EquipmentChecking) GetMoNote() string {
	if x != nil {
		return x.MoNote
	}
	return ""
}

func (x *EquipmentChecking) GetMoCreatedAt() string {
	if x != nil {
		return x.MoCreatedAt
	}
	return ""
}

func (x *EquipmentChecking) GetMrId() string {
	if x != nil {
		return x.MrId
	}
	return ""
}

func (x *EquipmentChecking) GetMrComment() string {
	if x != nil {
		return x.MrComment
	}
	return ""
}

func (x *EquipmentChecking) GetMrCreatedAt() string {
	if x != nil {
		return x.MrCreatedAt
	}
	return ""
}

func (x *EquipmentChecking) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *EquipmentChecking) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *EquipmentChecking) GetFo() *User {
	if x != nil {
		return x.Fo
	}
	return nil
}

func (x *EquipmentChecking) GetAssetEquipment() *AssetEquipment {
	if x != nil {
		return x.AssetEquipment
	}
	return nil
}

// All
type GetPackingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nophoto      string `protobuf:"bytes,1,opt,name=nophoto,proto3" json:"nophoto,omitempty"`
	Page         string `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	Perpage      string `protobuf:"bytes,3,opt,name=perpage,proto3" json:"perpage,omitempty"`
	Status       string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	LineId       string `protobuf:"bytes,5,opt,name=line_id,json=lineId,proto3" json:"line_id,omitempty"`
	MachineId    string `protobuf:"bytes,6,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	Date         string `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
	FoCondition  string `protobuf:"bytes,8,opt,name=fo_condition,json=foCondition,proto3" json:"fo_condition,omitempty"`
	AoConclusion string `protobuf:"bytes,9,opt,name=ao_conclusion,json=aoConclusion,proto3" json:"ao_conclusion,omitempty"`
}

func (x *GetPackingsRequest) Reset() {
	*x = GetPackingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackingsRequest) ProtoMessage() {}

func (x *GetPackingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackingsRequest.ProtoReflect.Descriptor instead.
func (*GetPackingsRequest) Descriptor() ([]byte, []int) {
	return file_pb_packingquerypb_packingquery_proto_rawDescGZIP(), []int{9}
}

func (x *GetPackingsRequest) GetNophoto() string {
	if x != nil {
		return x.Nophoto
	}
	return ""
}

func (x *GetPackingsRequest) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *GetPackingsRequest) GetPerpage() string {
	if x != nil {
		return x.Perpage
	}
	return ""
}

func (x *GetPackingsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetPackingsRequest) GetLineId() string {
	if x != nil {
		return x.LineId
	}
	return ""
}

func (x *GetPackingsRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *GetPackingsRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetPackingsRequest) GetFoCondition() string {
	if x != nil {
		return x.FoCondition
	}
	return ""
}

func (x *GetPackingsRequest) GetAoConclusion() string {
	if x != nil {
		return x.AoConclusion
	}
	return ""
}

type GetPackingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packings []*Packing `protobuf:"bytes,1,rep,name=packings,proto3" json:"packings,omitempty"`
	Total    int64      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page     int64      `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	LastPage int64      `protobuf:"varint,4,opt,name=last_page,json=lastPage,proto3" json:"last_page,omitempty"`
}

func (x *GetPackingsResponse) Reset() {
	*x = GetPackingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackingsResponse) ProtoMessage() {}

func (x *GetPackingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackingsResponse.ProtoReflect.Descriptor instead.
func (*GetPackingsResponse) Descriptor() ([]byte, []int) {
	return file_pb_packingquerypb_packingquery_proto_rawDescGZIP(), []int{10}
}

func (x *GetPackingsResponse) GetPackings() []*Packing {
	if x != nil {
		return x.Packings
	}
	return nil
}

func (x *GetPackingsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetPackingsResponse) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPackingsResponse) GetLastPage() int64 {
	if x != nil {
		return x.LastPage
	}
	return 0
}

type GetPackingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPackingRequest) Reset() {
	*x = GetPackingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackingRequest) ProtoMessage() {}

func (x *GetPackingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackingRequest.ProtoReflect.Descriptor instead.
func (*GetPackingRequest) Descriptor() ([]byte, []int) {
	return file_pb_packingquerypb_packingquery_proto_rawDescGZIP(), []int{11}
}

func (x *GetPackingRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetPackingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packing            *Packing             `protobuf:"bytes,1,opt,name=packing,proto3" json:"packing,omitempty"`
	EquipmentCheckings []*EquipmentChecking `protobuf:"bytes,2,rep,name=equipment_checkings,json=equipmentCheckings,proto3" json:"equipment_checkings,omitempty"`
}

func (x *GetPackingResponse) Reset() {
	*x = GetPackingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPackingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackingResponse) ProtoMessage() {}

func (x *GetPackingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_packingquerypb_packingquery_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackingResponse.ProtoReflect.Descriptor instead.
func (*GetPackingResponse) Descriptor() ([]byte, []int) {
	return file_pb_packingquerypb_packingquery_proto_rawDescGZIP(), []int{12}
}

func (x *GetPackingResponse) GetPacking() *Packing {
	if x != nil {
		return x.Packing
	}
	return nil
}

func (x *GetPackingResponse) GetEquipmentCheckings() []*EquipmentChecking {
	if x != nil {
		return x.EquipmentCheckings
	}
	return nil
}

var File_pb_packingquerypb_packingquery_proto protoreflect.FileDescriptor

var file_pb_packingquerypb_packingquery_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x62, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x70, 0x62, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x70, 0x62, 0x22, 0x2a, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x30, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x04, 0x41, 0x72, 0x65, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x2a, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x07,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x04, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x22, 0xe2, 0x02, 0x0a, 0x0e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x74, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x41, 0x72, 0x65, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x22, 0x9b, 0x05, 0x0a, 0x07, 0x50, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x6f, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x52,
	0x0a, 0x13, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x12,
	0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x70,
	0x62, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x3a, 0x0a, 0x0a,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x04, 0x61, 0x72,
	0x65, 0x61, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x70,
	0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x31, 0x0a, 0x07,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12,
	0x24, 0x0a, 0x02, 0x66, 0x6f, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x02, 0x66, 0x6f, 0x22, 0x8d, 0x06, 0x0a, 0x11, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x69,
	0x64, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x17, 0x69, 0x64, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x73, 0x73, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6f, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6f,
	0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6f,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x6f, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6f, 0x5f, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x4e, 0x6f, 0x74,
	0x65, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x6f, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6f, 0x5f, 0x63, 0x6f, 0x6e,
	0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x6f, 0x43, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61,
	0x6f, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6f,
	0x4e, 0x6f, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x6f, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x6d, 0x6f, 0x5f, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x6d, 0x6f, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x6f, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x6f, 0x5f, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x6d, 0x6f, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x6d, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x72, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x72, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x66, 0x6f, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x02, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x0f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x88, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x6f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x6f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65,
	0x72, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x72,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x5f, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x66, 0x6f, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x61,
	0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x6f, 0x43, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x91, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x70, 0x62, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x52, 0x0a, 0x13, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x70,
	0x62, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x12, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x32, 0xc6, 0x01, 0x0a, 0x13, 0x50, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x58, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x22,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x15, 0x5a, 0x13, 0x2e, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_packingquerypb_packingquery_proto_rawDescOnce sync.Once
	file_pb_packingquerypb_packingquery_proto_rawDescData = file_pb_packingquerypb_packingquery_proto_rawDesc
)

func file_pb_packingquerypb_packingquery_proto_rawDescGZIP() []byte {
	file_pb_packingquerypb_packingquery_proto_rawDescOnce.Do(func() {
		file_pb_packingquerypb_packingquery_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_packingquerypb_packingquery_proto_rawDescData)
	})
	return file_pb_packingquerypb_packingquery_proto_rawDescData
}

var file_pb_packingquerypb_packingquery_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_pb_packingquerypb_packingquery_proto_goTypes = []interface{}{
	(*Unit)(nil),                // 0: packingquerypb.Unit
	(*Department)(nil),          // 1: packingquerypb.Department
	(*Area)(nil),                // 2: packingquerypb.Area
	(*Line)(nil),                // 3: packingquerypb.Line
	(*Machine)(nil),             // 4: packingquerypb.Machine
	(*User)(nil),                // 5: packingquerypb.User
	(*AssetEquipment)(nil),      // 6: packingquerypb.AssetEquipment
	(*Packing)(nil),             // 7: packingquerypb.Packing
	(*EquipmentChecking)(nil),   // 8: packingquerypb.EquipmentChecking
	(*GetPackingsRequest)(nil),  // 9: packingquerypb.GetPackingsRequest
	(*GetPackingsResponse)(nil), // 10: packingquerypb.GetPackingsResponse
	(*GetPackingRequest)(nil),   // 11: packingquerypb.GetPackingRequest
	(*GetPackingResponse)(nil),  // 12: packingquerypb.GetPackingResponse
}
var file_pb_packingquerypb_packingquery_proto_depIdxs = []int32{
	3,  // 0: packingquerypb.AssetEquipment.line:type_name -> packingquerypb.Line
	4,  // 1: packingquerypb.AssetEquipment.machine:type_name -> packingquerypb.Machine
	8,  // 2: packingquerypb.Packing.equipment_checkings:type_name -> packingquerypb.EquipmentChecking
	0,  // 3: packingquerypb.Packing.unit:type_name -> packingquerypb.Unit
	1,  // 4: packingquerypb.Packing.department:type_name -> packingquerypb.Department
	2,  // 5: packingquerypb.Packing.area:type_name -> packingquerypb.Area
	3,  // 6: packingquerypb.Packing.line:type_name -> packingquerypb.Line
	4,  // 7: packingquerypb.Packing.machine:type_name -> packingquerypb.Machine
	5,  // 8: packingquerypb.Packing.fo:type_name -> packingquerypb.User
	5,  // 9: packingquerypb.EquipmentChecking.fo:type_name -> packingquerypb.User
	6,  // 10: packingquerypb.EquipmentChecking.asset_equipment:type_name -> packingquerypb.AssetEquipment
	7,  // 11: packingquerypb.GetPackingsResponse.packings:type_name -> packingquerypb.Packing
	7,  // 12: packingquerypb.GetPackingResponse.packing:type_name -> packingquerypb.Packing
	8,  // 13: packingquerypb.GetPackingResponse.equipment_checkings:type_name -> packingquerypb.EquipmentChecking
	9,  // 14: packingquerypb.PackingQueryService.GetPackings:input_type -> packingquerypb.GetPackingsRequest
	11, // 15: packingquerypb.PackingQueryService.GetPacking:input_type -> packingquerypb.GetPackingRequest
	10, // 16: packingquerypb.PackingQueryService.GetPackings:output_type -> packingquerypb.GetPackingsResponse
	12, // 17: packingquerypb.PackingQueryService.GetPacking:output_type -> packingquerypb.GetPackingResponse
	16, // [16:18] is the sub-list for method output_type
	14, // [14:16] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_pb_packingquerypb_packingquery_proto_init() }
func file_pb_packingquerypb_packingquery_proto_init() {
	if File_pb_packingquerypb_packingquery_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_packingquerypb_packingquery_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_packingquerypb_packingquery_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Department); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_packingquerypb_packingquery_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Area); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_packingquerypb_packingquery_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Line); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_packingquerypb_packingquery_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_packingquerypb_packingquery_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_packingquerypb_packingquery_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetEquipment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_packingquerypb_packingquery_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Packing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_packingquerypb_packingquery_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentChecking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_packingquerypb_packingquery_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPackingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_packingquerypb_packingquery_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPackingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_packingquerypb_packingquery_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPackingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_packingquerypb_packingquery_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPackingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_packingquerypb_packingquery_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_packingquerypb_packingquery_proto_goTypes,
		DependencyIndexes: file_pb_packingquerypb_packingquery_proto_depIdxs,
		MessageInfos:      file_pb_packingquerypb_packingquery_proto_msgTypes,
	}.Build()
	File_pb_packingquerypb_packingquery_proto = out.File
	file_pb_packingquerypb_packingquery_proto_rawDesc = nil
	file_pb_packingquerypb_packingquery_proto_goTypes = nil
	file_pb_packingquerypb_packingquery_proto_depIdxs = nil
}
